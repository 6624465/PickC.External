@model PickC.External.Contracts.Booking
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var fareChartList = (List<PickC.External.Contracts.FareChart>)TempData["TD:FareChartList"];
}
@section Styles{
    <style type="text/css">
        .booknow-btn-red {
            background: red;
            color: #fff200;
            position: relative;
            padding: 5px 15px;
            border: 1px solid #000;
            bottom: 8px;
        }

        .form-group {
            margin-bottom: 0px;
        }

        .form-control {
            margin-top: 20px;
        }

        /*.booknow-btn-red:hover {
                background: red;
                color: #000;
                border: 1px solid #000;
            }*/

    </style>
    <style type="text/css">
        #map-wrapper {
            width: 40.07%;
            min-height: 200px;
            display: inline-block;
            border: 1px solid lightgray;
            height: 55vh;
        }

        #dvMap {
            width: 100%;
            min-height: 45.2vh !important;
            height: 55vh;
        }
    </style>
}
<!--main content-->
<div class="container-fluid">
    <div class="row">
        <div class="bg-gif responsiveImage">
            <div class="container-fluid">
                <div class="col-md-4 col-xs-12">

                    <div class="slider-carousel">
                        <div id="myCarousel" class="carousel slide" data-ride="carousel">
                            <!-- Indicators -->
                            <ol class="carousel-indicators">
                                <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                                <li data-target="#myCarousel" data-slide-to="1"></li>
                                <li data-target="#myCarousel" data-slide-to="2"></li>
                                <li data-target="#myCarousel" data-slide-to="3"></li>
                                <li data-target="#myCarousel" data-slide-to="4"></li>
                                <li data-target="#myCarousel" data-slide-to="5"></li>

                            </ol>
                            <!-- Wrapper for slides -->
                            <div class="carousel-inner">
                                <div class="item active">
                                    <img src="@Url.Content("~/images/n1.png")" class="img-responsive" alt="">
                                </div>
                                <div class="item">
                                    <img src="@Url.Content("~/images/n2.jpg")" class="img-responsive" alt="">
                                </div>
                                <div class="item">
                                    <img src="@Url.Content("~/images/n8.png")" class="img-responsive" alt="">
                                </div>
                                <div class="item">
                                    <img src="@Url.Content("~/images/n5.jpg")" class="img-responsive" alt="">
                                </div>
                                <div class="item">
                                    <img src="@Url.Content("~/images/n4.jpg")" class="img-responsive" alt="">
                                </div>
                                <div class="item">
                                    <img src="@Url.Content("~/images/amount.png")" class="img-responsive" alt="">
                                </div>

                                <!-- Left and right controls -->
                                <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="right carousel-control" href="#myCarousel" data-slide="next">
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="mobile"></div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <div class="main-slider-text">

                    </div>
                    <div class="clear-fix"></div>
                    <div class="estimate-bg">
                        <form action="" id="frmFromToLocation" name="frmFromToLocation">
                            <div class="form-group estimate-form">
                                <input type="text"
                                       name="fromLocation"
                                       class="form-control"
                                       id="fromLocation"
                                       placeholder="Enter From Location" />
                                <img src="@Url.Content("~/images/source1.png")" class="img-responsive" />
                            </div>
                            <div class="form-group estimate-form">
                                <input type="text"
                                       class="form-control"
                                       id="toLocation"
                                       placeholder="Enter To Location"
                                       name="toLocation" />
                                <img src="@Url.Content("~/images/destination1.png")" class="img-responsive" />
                            </div>
                            <a class="btn btn-default btn-focus" onclick="FromToLocations()">Get Trip Estimate</a>
                            <a class="btn btn-primary" href="javascript::" onclick="Clear()">Clear</a>
                        </form>
                    </div>
                </div>
                <div class="col-md-2">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="app-icons-div">
            <div class="container-fluid">

                <div class="col-md-3 app-icons">
                    <a href="#"><img src="@Url.Content("~/images/goo.png")" /></a>
                    <a href="#"><img src="@Url.Content("~/images/app.png")" /></a>
                </div>
                <div class="col-md-6">
                    <div class="slider-text">
                        <h1>Pick-C India’s Best Logistics App</h1>
                    </div>
                </div>
                <div class="col-md-3">
                    <button type="button" onclick="trackcrn()" class="track-crn-btn">Track Cargo with CRN</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Track CRN Start -->
@{
    var TrackCRNVmObj = (PickC.External.Contracts.TrackCRNVm)TempData["TD:TrackCRNVm"];
    PickC.External.Contracts.TrackCRNVm TrackCRNVm = null;
    PickC.External.Contracts.Booking bkgTrackCrn = null;
    if(TrackCRNVmObj != null)
    {
        TrackCRNVm = (PickC.External.Contracts.TrackCRNVm)TrackCRNVmObj;
        if (TrackCRNVm != null)
        {
            bkgTrackCrn = TrackCRNVm.booking;
        }
    }

    var isTrackCRN = TempData["TD:IsTrackCRN"];
}
@using (Html.BeginForm("TrackCrn", "Dashboard", FormMethod.Post, new { id = "frmTrackCrn", name = "frmTrackCrn" }))
{
    <div class="modal fade" id="track-crn-modal" role="dialog" aria-labelledby="track-crn-label" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Track CRN</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">
                            <input type="text" id="trackCrnNo" name="trackCrnNo" class="form-control input-sm" placeholder="Track CRN" />
                        </div>
                        <div class="col-md-1">
                            <button type="button" onclick="trackCrnClick();" class="btn btn-default input-sm">Submit</button>
                        </div>
                        <div class="col-md-1">
                            <button type="button" onclick="trackCrnRefresh();" class="btn btn-default input-sm">Refresh</button>
                        </div>
                        <div class="col-md-6">
                            @if (TrackCRNVm != null && TrackCRNVm.booking == null)
                            {
                            <label>Invalid Booking No</label>
                            }
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px">
                        <div class="col-md-12">
                            <div id="dvMap" style="height:425px;position: relative; overflow: hidden; background-color: rgb(229, 227, 223);"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn">Close</button>
                </div>
            </div>
        </div>
    </div>
}



<!-- Track CRN End -->
@using (Html.BeginForm("TripEstimate", "CustomerInquiry", FormMethod.Post, new { id = "frmTripEstimate", name = "frmTripEstimate" }))
{
    <div class="modal fade" id="get-trip-estimate" tabindex="-1" role="dialog"
         aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog center-modal modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.TextBox("CustomerName", "", new { placeholder = "Enter Name", @class = "form-control alphaonly", @id = "CustomerName" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.TextBox("MobileNo", "", new { placeholder = "Enter Mobile Number", @class = "form-control numCss MobileNoCss", @id = "MobileNo" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.TextBox("EmailID", "", new { placeholder = "Enter Email ID", @class = "form-control", @id = "EmailID" })
                            @Html.Hidden("Distance")
                            @Html.Hidden("Duration")
                            @Html.Hidden("frmLatLog")
                            @Html.Hidden("toLatLog")
                            @Html.Hidden("fromLocation")
                            @Html.Hidden("toLocation")
                            @Html.Hidden("fLoc")
                            @Html.Hidden("tLoc")
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="TripEstimate()" class="btn get-estimate-btn">
                        Get Estimate Now
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@{
    var bookingStatus = (PickC.External.ViewModels.BookingStatusVm)TempData["TD:BookingInfo"];
}

@if (bookingStatus != null)
{
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <div>
                        <span>@bookingStatus.Status</span>
                    </div>
                    <div>
                        <span>Your CRN is : @bookingStatus.BookingNo</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

<div class="modal fade" id="prices-list" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog scroll center-modal">
        <div class="modal-content">
            <div class="modal-header custom-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title">Approx. Estimate Fare</h4>
            </div>
            <div class="modal-body">
                <div class="row space-top prices-list-bg">
                    <div class="col-md-4 col-xs-4 custom-height">
                        <div class="pricelist-logo">
                            <img src="@Url.Content("~/images/logo.png")" class="img-responsive" alt="pickcargo logo" />
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-4 custom-height">
                        <div class="open-close-img">
                            <img src="@Url.Content("~/images/open.png")" class="img-responsive" alt="" />
                        </div>
                        <h5 class="inline">Open Truck</h5>
                    </div>
                    <div class="col-md-4 col-xs-4">
                        <div class="open-close-img">
                            <img src="@Url.Content("~/images/closed.png")" class="img-responsive" alt="" />
                        </div>
                        <h5 class="inline">Close Truck</h5>
                    </div>
                </div>
                @if (fareChartList != null)
                {
                    for (var i = 0; i < fareChartList.Count; i++)
                    {
                        <div class="row space-top">
                            <div class="col-md-4 col-xs-4 custom-height custom-truck-div">
                                <div class="vehicle-types">
                                    <div class="icon">
                                        <img src="@Url.Content("~/images/" + fareChartList[i].vehicleGroupDesc + ".png")" class="img-responsive" alt="Mini-Truck" />
                                    </div>
                                    <h3>@fareChartList[i].vehicleGroupDesc</h3>
                                </div>
                            </div>
                            <div class="color-bg">
                                <div class="col-md-4 col-xs-4 custom-height">
                                    <div class="Prices-list">
                                        <h3 style="margin-top:29px;">&#x20B9;@fareChartList[i].OpenCharge.ToString("0.##")</h3>
                                        <a href="#" data-vgroup="@fareChartList[i].vehicleGroupDesc" @if (fareChartList[i].IsOpenOnline) { <text> onclick="bookingSave('@fareChartList[i].vehicleGroup', '1300')" </text> } data-open="@fareChartList[i].OpenCharge.ToString("0.##")" data-close="0" id="OpenCharge_@i"></a><!--<div class="avail-unavail-btn"></div>-->
                                        @*<a href="#" data-vgroup="@fareChartList[i].vehicleGroupDesc" @if (fareChartList[i].IsOpenOnline) { <text> onclick="bookingSave('@fareChartList[i].vehicleGroup', '1300')" </text>   } data-open="@fareChartList[i].OpenCharge.ToString("0.##")" data-close="0" id="OpenCharge_@i" @if (fareChartList[i].IsOpenOnline) { <text> class="booknowactive-btn" </text>    } else { <text> class="booknow-btn-red context" </text>   }>Book Now</a>*@<!--<div class="avail-unavail-btn"></div>-->
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-xs-4 custom-height">
                                <div class="Prices-list">
                                    <h3 style="margin-top:29px;">&#x20B9;@fareChartList[i].CloseCharge.ToString("0.##")</h3>
                                    <a href="#" data-vgroup="@fareChartList[i].vehicleGroupDesc" @if (fareChartList[i].IsCloseOnline) { <text> onclick="bookingSave('@fareChartList[i].vehicleGroup', '1301')" </text> } data-close="@fareChartList[i].CloseCharge.ToString("0.##")" data-open="0" id="CloseCharge_@i"></a>
                                    @*<a href="#" data-vgroup="@fareChartList[i].vehicleGroupDesc" @if (fareChartList[i].IsCloseOnline) { <text> onclick="bookingSave('@fareChartList[i].vehicleGroup', '1301')" </text>  } data-close="@fareChartList[i].CloseCharge.ToString("0.##")" data-open="0" id="CloseCharge_@i" @if (fareChartList[i].IsCloseOnline) { <text> class="booknowactive-btn" </text>    } else { <text> class="booknow-btn-red context" </text>   }>Book Now</a>*@
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="modal-footer custom-footer">
                <h4 class="note-text"><strong>Note:&nbsp;</strong>This is an approximate estimate.Actual fare and travel time may differ.</h4>
            </div>
        </div>
    </div>
</div>


@using (Html.BeginForm("SaveBooking", "Dashboard", FormMethod.Post, new { id = "frmBooking", name = "frmBooking" }))
{
    @Html.Hidden("CustomerId")
    @Html.Hidden("CustomerName")
    @Html.Hidden("LocationFrom")
    @Html.Hidden("LocationTo")
    @Html.Hidden("Latitude")
    @Html.Hidden("Longitude")
    @Html.Hidden("ToLatitude")
    @Html.Hidden("ToLongitude")
    @Html.Hidden("VehicleType")
    @Html.Hidden("VehicleGroup")

}

<!-- modals content-->
@section Scripts{
    <script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7WVBL9AmhKs1QAr4x7mArA2mKZY-9nUo&v=3.exp&libraries=places&sensor=true"></script>

    <script type="text/javascript">
        @if(TrackCRNVm != null && TrackCRNVm.driverMonitorInCustomer != null && TrackCRNVm.booking != null)
        {
            <text>
            var MapPoints = '[{"address":{"address":"","lat":"@TrackCRNVm.driverMonitorInCustomer.CurrentLat","lng":"@TrackCRNVm.driverMonitorInCustomer.CurrentLong"},"title":"@TrackCRNVm.booking.BookingNo","VehicleNo":null,"VehicleType":"@TrackCRNVm.booking.VehicleType","VehicleCategory":"@TrackCRNVm.booking.VehicleGroup","ETA":null,"TripStartTime":null,"ArrivalTime":null,"WaitingTime":null,"Status":0}]';
            </text>
        }
        else {
            <text>var MapPoints = '[]';</text>
        }
        @if(bkgTrackCrn != null)
        {
            <text>
                var bkgTrackCrnLat = '@bkgTrackCrn.Latitude';
                var bkgTrackCrnLong = '@bkgTrackCrn.Longitude';
                var bkgTrackCrnToLat = '@bkgTrackCrn.ToLatitude';
                var bkgTrackCrnToLong = '@bkgTrackCrn.ToLongitude';
                var bkgTrackCrnBookingNo = '@bkgTrackCrn.BookingNo';
                $(function () {
                        $('#track-crn-modal').modal('show');
                        $('#trackCrnNo').val('@bkgTrackCrn.BookingNo');
                        OnInit(500);
                });
            </text>
        }
        else {
            if (isTrackCRN != null)
            {
                <text>
                    $('#track-crn-modal').modal('show');
                </text>
            }
        }
                    $('#track-crn-modal').on('hidden.bs.modal', function () {
                        location.href = '@Url.Content("~/Dashboard/Index")';
                    })
                    function OnInit(timeOut) {
                        setTimeout(function () {
                            TrackCRNMap(
                                bkgTrackCrnLat,
                                bkgTrackCrnLong,
                                bkgTrackCrnToLat,
                                bkgTrackCrnToLong);

                            GetBookingData(bkgTrackCrnBookingNo);
                        }, timeOut);
                    }
                    function trackCrnRefresh() {
                        TrackCRNMap(
                            bkgTrackCrnLat,
                            bkgTrackCrnLong,
                            bkgTrackCrnToLat,
                            bkgTrackCrnToLong);

                        GetBookingData(bkgTrackCrnBookingNo);
                    }
                    function GetBookingData(trackCrnNo) {
                        var isModalOpen = ($("#track-crn-modal").data('bs.modal') || {}).isShown
                        if (isModalOpen) {
                            $.ajax({
                                method: 'GET',
                                url: '@Url.Content("~/Dashboard/GetBookingData?trackCrnNo=")' + trackCrnNo,
                                contentType: 'application/json',
                                success: function (data) {

                                    if (!data.booking.IsComplete && !data.booking.IsCancel) {
                                        MapPoints = '[{"address":{"address":"","lat":"' + data.driverMonitorInCustomer.CurrentLat + '","lng":"' + data.driverMonitorInCustomer.CurrentLong + '"},"title":"' + data.driverMonitorInCustomer.CurrentLong + '","VehicleNo":null,"VehicleType":"' + data.booking.VehicleType + '","VehicleCategory":"' + data.booking.VehicleGroup + '","ETA":null,"TripStartTime":null,"ArrivalTime":null,"WaitingTime":null,"Status":0}]';
                                        OnInit(10000);
                                    }
                                }
                            });
                        }
                    }

        var directionDisplay;
        var directionsService = new google.maps.DirectionsService();
        var map;
        function TrackCRNMap(frmLat, frmLog, toLat, toLog) {

            directionsDisplay = new google.maps.DirectionsRenderer();
            var myOptions = {
                mapTypeId: google.maps.MapTypeId.ROADMAP,
            }
            map = new google.maps.Map(document.getElementById('dvMap'), myOptions);
            directionsDisplay.setMap(map);

            var infowindow = new google.maps.InfoWindow();
            var flightPlanCoordinates = [];
            var bounds = new google.maps.LatLngBounds();
            var locations = jQuery.parseJSON(MapPoints);
            for (i = 0; i < locations.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i].address.lat, locations[i].address.lng),
                    map: map,
                    icon: getVehicleImage(locations[i].VehicleType, locations[i].VehicleCategory)
                });
                flightPlanCoordinates.push(marker.getPosition());
                bounds.extend(marker.position);

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(locations[i]['title']);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }

            map.fitBounds(bounds);


            var start = new google.maps.LatLng(frmLat, frmLog);
            var end = new google.maps.LatLng(toLat, toLog);
            var request = {
                origin: start,
                destination: end,
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                    var myRoute = response.routes[0];
                    var txtDir = '';
                    for (var i = 0; i < myRoute.legs[0].steps.length; i++) {
                        txtDir += myRoute.legs[0].steps[i].instructions + "<br />";
                    }
                    console.log(txtDir);
                    //document.getElementById('directions').innerHTML = txtDir;
                }
            });

            /*
            document.getElementById('dvMap').style.height = '470px';
            var mapDiv = document.getElementById('dvMap');
            var latlng = new google.maps.LatLng(26.90, 76.35);
            var options = {
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                navigationControl: true,
                scaleControl: true,
                disableDoubleClickZoom: true,
                scrollwheel: false,
                streetViewControl: true
            };
            var waypts = [];
            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                optimizeWaypoints: false,
                travelMode: google.maps.DirectionsTravelMode.DRIVING,
                unitSystem: google.maps.DirectionsUnitSystem.METRIC
            };
            debugger;
            directionsService = new google.maps.DirectionsService();
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {

                }

                map = new google.maps.Map(mapDiv, options);
                directionsDisplay = new google.maps.DirectionsRenderer({

                });
                directionsDisplay.setMap(map);
                directionsDisplay.setPanel(document.getElementById('panel'));
                directionsDisplay.setDirections(response);
            });
            */
        }

        function getVehicleImage(type, group) {
            var imgBaseUrl = '/images/web/';
            if (type == '1300')//Open
            {
                return imgBaseUrl + 'open.png';
                //if (group == '1000')//Mini
                //    return imgBaseUrl + 'open_0_75_ton_selected.png';
                //else if (group == '1001')//Small
                //    return imgBaseUrl + 'open_selected_1_ton.png';
                //else if (group == '1002')//Medium
                //    return imgBaseUrl + 'open_selected_1_5_ton.png';
                //else if (group == '1003')//Large
                //    return imgBaseUrl + 'open_2_ton_selected.png';
            }
            else if (type == '1301')//Closed
            {
                return imgBaseUrl + 'close.png';
                //if (group == '1000')//Mini
                //    return imgBaseUrl + 'closed_0_75_ton_selected.png';
                //else if (group == '1001')//Small
                //    return imgBaseUrl + 'closed_selected_1_ton.png';
                //else if (group == '1002')//Medium
                //    return imgBaseUrl + 'closed_selected_1_5_ton.png';
                //else if (group == '1003')//Large
                //    return imgBaseUrl + 'closed_2_ton_selected.png';
            }
        }

    </script>
    <script type="text/javascript">
        $(document).on('keypress', '.numCss', function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if ((charCode >= 48 && charCode <= 57) || charCode == 8)
                return true;
            else
                return false;
        });
        var source, destination;
        var directionsDisplay;
        var options = {};

        var southWest = new google.maps.LatLng(52.318274, 4.728856);
        var northEast = new google.maps.LatLng(52.431157, 5.068373);
        var defaultBounds = new google.maps.LatLngBounds(southWest, northEast);
        options = {
            bounds: defaultBounds,
            types: ['address'],//geocode
            componentRestrictions: { country: 'in' }
        };
        var directionsService = new google.maps.DirectionsService();
        google.maps.event.addDomListener(window, 'load', function () {
            new google.maps.places.Autocomplete(document.getElementById('fromLocation'), options);
            new google.maps.places.Autocomplete(document.getElementById('toLocation'), options);
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
        });

        function bookingSave(vehicleGroup, vehicleType) {
            @{
                    var customerInquiryVm = (PickC.External.ViewModels.CustomerInquiryVm)TempData["TD:CustomerInquiry"];

                    if (customerInquiryVm != null)
                    {
                <text>
            $('#CustomerId').val('@customerInquiryVm.MobileNo');
            $('#CustomerName').val('@customerInquiryVm.CustomerName');
            $('#LocationFrom').val('@customerInquiryVm.fLoc');
            $('#LocationTo').val('@customerInquiryVm.tLoc');
            $('#Latitude').val('@customerInquiryVm.frmLatLog.Split(' ')[0]');
            $('#Longitude').val('@customerInquiryVm.frmLatLog.Split(' ')[1]');
            $('#ToLatitude').val('@customerInquiryVm.toLatLog.Split(' ')[0]');
            $('#ToLongitude').val('@customerInquiryVm.toLatLog.Split(' ')[1]');
            $('#VehicleType').val(vehicleType);
            $('#VehicleGroup').val(vehicleGroup);
            $('#frmBooking').submit();
            </text>
                }
            }
        }
        $(function () {
            @{
                var isTripEstimate = ViewData["vdIsTripEstimate"];
                if (isTripEstimate != null && (bool)isTripEstimate && fareChartList != null)
                {
                    <text>
            $('#prices-list').modal('show');
            </text>
                }
            }
            @if(bookingStatus != null)
            {

                <text>
            $('#myModal').modal('show');
            </text>
            }

            function ClearTrpEstimate() {

            }

            $('#get-trip-estimate').on('hidden.bs.modal', function () {
                $('#frmTripEstimate')[0].reset();
                $(this).find('form').trigger('reset');
            });

            $('#frmTripEstimate').validate({
                rules: {
                    CustomerName: {
                        required: true,
                        maxlength: 50
                    },
                    MobileNo: {
                        required: true,
                        minlength: 10,
                        maxlength: 10
                        //regex: /^[789]\d{9}$/ ///^[7-9][0-9]{9}$/ //'^[789]\d{9}$'
                    },
                    EmailID: {
                        email: true,
                        required: false,
                        maxlength: 50
                    }
                },
                messages: {
                    CustomerName: {
                        required: 'Please Enter Name'
                    },
                    MobileNo: {
                        required: 'Please enter valid Mobile Number'
                    }
                }
            });
            $('#frmFromToLocation').validate({
                rules: {
                    fromLocation: {
                        required: true
                    },
                    toLocation: {
                        required: true
                    }
                }
            });
        });
        function FromToLocations() {
            if ($('#frmFromToLocation').valid()) {
                $('#frmTripEstimate input[type="text"]').removeClass('error');
                $('#frmTripEstimate label').removeClass('error');
                $('#frmTripEstimate label').empty();

                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': $("#fromLocation").val() }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        $('#frmLatLog').val(results[0].geometry.location.lat() + " " + results[0].geometry.location.lng());
                    }
                });
                geocoder.geocode({ 'address': $("#toLocation").val() }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        $('#toLatLog').val(results[0].geometry.location.lat() + " " + results[0].geometry.location.lng());
                    }
                });
                $('#get-trip-estimate').modal('show');
            }
            else {
                alert("Please enter From and To locations");
            }
        }
        var fLoc = '';
        var tLoc = '';
        function TripEstimate() {
            if ($('#frmTripEstimate').valid()) {

                var Obj = {};
                Obj.CustomerName = $("#CustomerName").val();
                Obj.CustomerId = $("#MobileNo").val();
                localStorage.setItem("CustomerObj", JSON.stringify(Obj));
                fLoc = $('#fromLocation').val();
                tLoc = $('#toLocation').val();
                DrawMapNew($('#fromLocation').val(), $('#toLocation').val());
            }
        }

        function DrawMapNew(start, end) {
            fLoc = start;
            tLoc = end;
            $('#pickuparea').html(start);
            $('#dropoffarea').html(end);
            var latlng = new google.maps.LatLng(26.90, 76.35);
            var options = {
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                navigationControl: true,
                scaleControl: true,
                disableDoubleClickZoom: true,
                scrollwheel: false,
                streetViewControl: true
            };
            var waypts = [];
            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                optimizeWaypoints: false,
                travelMode: google.maps.DirectionsTravelMode.DRIVING,
                unitSystem: google.maps.DirectionsUnitSystem.METRIC
            };

            directionsService = new google.maps.DirectionsService();
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    var frmLoc = $('#fromLocation').val();
                    $('#fLoc').val(fLoc);
                    $('#tLoc').val(tLoc);
                    $('#Distance').val(response.routes[0].legs[0].distance.value / 1000);
                    $('#Duration').val(response.routes[0].legs[0].duration.value / 60);
                    $('#frmTripEstimate').submit();
                }

                directionsDisplay = new google.maps.DirectionsRenderer({

                });
                directionsDisplay.setMap(map);
                directionsDisplay.setPanel(document.getElementById('panel'));
                directionsDisplay.setDirections(response);
            });
            $('#tripEstimateModal').modal('show');
        }

        function Clear() {
            $('#fromLocation, #toLocation').val('');
        }

        function trackcrn() {
            document.getElementById('trackCrnNo').value = '';
            $('#track-crn-modal').modal('show');
        }

        function trackCrnClick() {
            
            $('#frmTrackCrn').submit();
        }

        
    </script>

}
<style>
    .context {
        cursor: not-allowed;
    }
</style>